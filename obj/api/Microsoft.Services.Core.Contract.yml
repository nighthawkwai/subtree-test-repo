### YamlMime:ManagedReference
items:
- uid: Microsoft.Services.Core.Contract
  commentId: T:Microsoft.Services.Core.Contract
  id: Contract
  parent: Microsoft.Services.Core
  children:
  - Microsoft.Services.Core.Contract.AssertArgNotNull(System.Object,System.String,System.String,System.String,System.Int32)
  - Microsoft.Services.Core.Contract.AssertArgNotNullOrEmptyOrWhitespace(System.String,System.String,System.String,System.String,System.Int32)
  - Microsoft.Services.Core.Contract.AssertNotNull(System.Object,System.String,System.String,System.String,System.String,System.Int32)
  - Microsoft.Services.Core.Contract.Requires``1(System.Boolean,System.String,System.String,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: Contract
  nameWithType: Contract
  fullName: Microsoft.Services.Core.Contract
  type: Class
  source:
    remote:
      path: Product/source/Microsoft.Services.Core/Contract.cs
      branch: master
      repo: https://msdata.visualstudio.com/HDInsight/_git/Common-CSharp
    id: Contract
    path: Product/source/Microsoft.Services.Core/Contract.cs
    startLine: 9
  assemblies:
  - Microsoft.Services.Core
  namespace: Microsoft.Services.Core
  summary: "\nA contracts class that mimics the functionality of <xref href=\"System.Diagnostics.Contracts\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class Contract
    content.vb: Public Module Contract
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Services.Core.Contract.Requires``1(System.Boolean,System.String,System.String,System.String,System.Int32)
  commentId: M:Microsoft.Services.Core.Contract.Requires``1(System.Boolean,System.String,System.String,System.String,System.Int32)
  id: Requires``1(System.Boolean,System.String,System.String,System.String,System.Int32)
  parent: Microsoft.Services.Core.Contract
  langs:
  - csharp
  - vb
  name: Requires<T>(Boolean, String, String, String, Int32)
  nameWithType: Contract.Requires<T>(Boolean, String, String, String, Int32)
  fullName: Microsoft.Services.Core.Contract.Requires<T>(System.Boolean, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Product/source/Microsoft.Services.Core/Contract.cs
      branch: master
      repo: https://msdata.visualstudio.com/HDInsight/_git/Common-CSharp
    id: Requires
    path: Product/source/Microsoft.Services.Core/Contract.cs
    startLine: 21
  assemblies:
  - Microsoft.Services.Core
  namespace: Microsoft.Services.Core
  summary: "\nWrapper for the CodeContract Requries method\n"
  example: []
  syntax:
    content: 'public static void Requires<T>(bool condition, string message = null, string memberName = "", string sourceFilePath = "", int sourceLineNumber = 0)where T : Exception'
    content.vb: Public Shared Sub Requires(Of T As Exception)(condition As Boolean, message As String = Nothing, memberName As String = "", sourceFilePath As String = "", sourceLineNumber As Integer = 0)
    parameters:
    - id: condition
      type: System.Boolean
      description: ''
    - id: message
      type: System.String
      description: ''
    - id: memberName
      type: System.String
    - id: sourceFilePath
      type: System.String
    - id: sourceLineNumber
      type: System.Int32
    typeParameters:
    - id: T
      description: ''
  nameWithType.vb: Contract.Requires(Of T)(Boolean, String, String, String, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Services.Core.Contract.Requires(Of T)(System.Boolean, System.String, System.String, System.String, System.Int32)
  name.vb: Requires(Of T)(Boolean, String, String, String, Int32)
- uid: Microsoft.Services.Core.Contract.AssertNotNull(System.Object,System.String,System.String,System.String,System.String,System.Int32)
  commentId: M:Microsoft.Services.Core.Contract.AssertNotNull(System.Object,System.String,System.String,System.String,System.String,System.Int32)
  id: AssertNotNull(System.Object,System.String,System.String,System.String,System.String,System.Int32)
  parent: Microsoft.Services.Core.Contract
  langs:
  - csharp
  - vb
  name: AssertNotNull(Object, String, String, String, String, Int32)
  nameWithType: Contract.AssertNotNull(Object, String, String, String, String, Int32)
  fullName: Microsoft.Services.Core.Contract.AssertNotNull(System.Object, System.String, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Product/source/Microsoft.Services.Core/Contract.cs
      branch: master
      repo: https://msdata.visualstudio.com/HDInsight/_git/Common-CSharp
    id: AssertNotNull
    path: Product/source/Microsoft.Services.Core/Contract.cs
    startLine: 50
  assemblies:
  - Microsoft.Services.Core
  namespace: Microsoft.Services.Core
  summary: "\nAsserts that arg is not null.\n"
  example: []
  syntax:
    content: public static void AssertNotNull(object arg, string name, string message = null, string memberName = "", string sourceFilePath = "", int sourceLineNumber = 0)
    content.vb: Public Shared Sub AssertNotNull(arg As Object, name As String, message As String = Nothing, memberName As String = "", sourceFilePath As String = "", sourceLineNumber As Integer = 0)
    parameters:
    - id: arg
      type: System.Object
      description: The arg.
    - id: name
      type: System.String
    - id: message
      type: System.String
      description: The message.
    - id: memberName
      type: System.String
    - id: sourceFilePath
      type: System.String
    - id: sourceLineNumber
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Services.Core.Contract.AssertArgNotNull(System.Object,System.String,System.String,System.String,System.Int32)
  commentId: M:Microsoft.Services.Core.Contract.AssertArgNotNull(System.Object,System.String,System.String,System.String,System.Int32)
  id: AssertArgNotNull(System.Object,System.String,System.String,System.String,System.Int32)
  parent: Microsoft.Services.Core.Contract
  langs:
  - csharp
  - vb
  name: AssertArgNotNull(Object, String, String, String, Int32)
  nameWithType: Contract.AssertArgNotNull(Object, String, String, String, Int32)
  fullName: Microsoft.Services.Core.Contract.AssertArgNotNull(System.Object, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Product/source/Microsoft.Services.Core/Contract.cs
      branch: master
      repo: https://msdata.visualstudio.com/HDInsight/_git/Common-CSharp
    id: AssertArgNotNull
    path: Product/source/Microsoft.Services.Core/Contract.cs
    startLine: 68
  assemblies:
  - Microsoft.Services.Core
  namespace: Microsoft.Services.Core
  summary: "\nAsserts that arg is not null.\n"
  example: []
  syntax:
    content: public static void AssertArgNotNull(object arg, string argname, string memberName = "", string sourceFilePath = "", int sourceLineNumber = 0)
    content.vb: Public Shared Sub AssertArgNotNull(arg As Object, argname As String, memberName As String = "", sourceFilePath As String = "", sourceLineNumber As Integer = 0)
    parameters:
    - id: arg
      type: System.Object
      description: The arg.
    - id: argname
      type: System.String
      description: The argname.
    - id: memberName
      type: System.String
    - id: sourceFilePath
      type: System.String
    - id: sourceLineNumber
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Services.Core.Contract.AssertArgNotNullOrEmptyOrWhitespace(System.String,System.String,System.String,System.String,System.Int32)
  commentId: M:Microsoft.Services.Core.Contract.AssertArgNotNullOrEmptyOrWhitespace(System.String,System.String,System.String,System.String,System.Int32)
  id: AssertArgNotNullOrEmptyOrWhitespace(System.String,System.String,System.String,System.String,System.Int32)
  parent: Microsoft.Services.Core.Contract
  langs:
  - csharp
  - vb
  name: AssertArgNotNullOrEmptyOrWhitespace(String, String, String, String, Int32)
  nameWithType: Contract.AssertArgNotNullOrEmptyOrWhitespace(String, String, String, String, Int32)
  fullName: Microsoft.Services.Core.Contract.AssertArgNotNullOrEmptyOrWhitespace(System.String, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Product/source/Microsoft.Services.Core/Contract.cs
      branch: master
      repo: https://msdata.visualstudio.com/HDInsight/_git/Common-CSharp
    id: AssertArgNotNullOrEmptyOrWhitespace
    path: Product/source/Microsoft.Services.Core/Contract.cs
    startLine: 86
  assemblies:
  - Microsoft.Services.Core
  namespace: Microsoft.Services.Core
  summary: "\nAsserts that arg is not null or empty or WhiteSpace.\n"
  example: []
  syntax:
    content: public static void AssertArgNotNullOrEmptyOrWhitespace(string arg, string argname, string memberName = "", string sourceFilePath = "", int sourceLineNumber = 0)
    content.vb: Public Shared Sub AssertArgNotNullOrEmptyOrWhitespace(arg As String, argname As String, memberName As String = "", sourceFilePath As String = "", sourceLineNumber As Integer = 0)
    parameters:
    - id: arg
      type: System.String
      description: The arg.
    - id: argname
      type: System.String
      description: The argname.
    - id: memberName
      type: System.String
    - id: sourceFilePath
      type: System.String
    - id: sourceLineNumber
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Argument cannot be empty
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Diagnostics.Contracts
  commentId: N:System.Diagnostics.Contracts
- uid: Microsoft.Services.Core
  commentId: N:Microsoft.Services.Core
  isExternal: false
  name: Microsoft.Services.Core
  nameWithType: Microsoft.Services.Core
  fullName: Microsoft.Services.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
